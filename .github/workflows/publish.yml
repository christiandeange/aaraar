name: Publish

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  publish-release:
    runs-on: ubuntu-latest
    if: github.repository == 'christiandeange/aaraar'
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      - name: Publish Release
        env:
          SONATYPE_NEXUS_USERNAME: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          SONATYPE_NEXUS_PASSWORD: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ARTIFACT_SIGNING_PRIVATE_KEY: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
          ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD }}
        run: |
          ORG_GRADLE_PROJECT_mavenCentralUsername="$SONATYPE_NEXUS_USERNAME" \
          ORG_GRADLE_PROJECT_mavenCentralPassword="$SONATYPE_NEXUS_PASSWORD" \
          ORG_GRADLE_PROJECT_signingInMemoryKey="$ARTIFACT_SIGNING_PRIVATE_KEY" \
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword="$ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD" \
          ./gradlew clean publish --no-build-cache --no-daemon --stacktrace

  deploy-mkdocs:
    runs-on: ubuntu-latest
    if: github.repository == 'christiandeange/aaraar'
    needs:
      - publish-release

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Build API Reference
        run: ./gradlew dokkaHtmlCollector

      - name: Install MkDocs
        run: pip install mkdocs-material

      - name: Build MkDocs
        run: |
          rm docs/changelog.md
          cp CHANGELOG.md docs/changelog.md
          mkdocs build

      - name: Deploy MkDocs to GitHub Pages
        run: mkdocs gh-deploy --force
